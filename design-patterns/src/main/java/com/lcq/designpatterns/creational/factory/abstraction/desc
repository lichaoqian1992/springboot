定义：提供一个创建一系列相关或相互依赖对象的接口，而无须指定它们具体的类；具体的工厂负责实现具体的产品实例。
解决的问题：每个工厂只能创建一类产品（工厂方法模式）

抽象工厂模式与工厂方法模式最大的区别：抽象工厂中每个工厂可以创建多种类的产品；而工厂方法每个工厂只能创建一类

    主要对象
    抽象工厂：描述具体工厂的公共接口
    具体工厂：描述具体工厂，创建产品的实例，供外界调用
    抽象产品族：描述抽象产品的公共接口
    抽象产品：描述具体产品的公共接口
    具体产品：具体产品

    举个简单易懂的例子：（找了个不怎么好的比喻，看不懂得可以看相关推荐链接）
    “假设”有各类的自动售卖机（抽象工厂），可以出售各类食品（抽象产品族）。
    有饮料、零食（抽象产品），比如常见的零食售卖机（具体工厂），出售矿泉水与面包（具体产品）。

根据实例可以描述为： 多个抽象产品类，每个抽象产品类可以派生出多个具体产品类。一个抽象工厂类，可以派生出多个具体工厂类。 每个具体工厂类可以创建多个具体产品类的实例。.

    优点：

        降低耦合
        符合开-闭原则
        符合单一职责原则
        不使用静态工厂方法，可以形成基于继承的等级结构。

    缺点：难以扩展新种类产品

五、总结

角色不同：

        简单工厂：具体工厂、抽象产品、具体产品
        工厂方法：抽象工厂、具体工厂、抽象产品、具体产品
        抽象工厂：抽象工厂、具体工厂、抽象产品族、抽象产品、具体产品

定义：

        简单工厂：由一个工厂类根据传入的参数，动态决定应该创建哪一个产品类（继承自一个父类或接口）的实例。
        工厂方法：定义工厂父类负责定义创建对象的公共接口，而子类则负责生成具体的对象
        抽象工厂：提供一个创建一系列相关或相互依赖对象的接口，而无须指定它们具体的类；具体的工厂负责实现具体的产品实例。

对比：

        工厂方法模式解决了简单工厂模式的“开放 - 关闭原则
        抽象工厂模式解决了工厂方法模式一个具体工厂只能创建一类产品

作者：斌林诚上
链接：https://www.jianshu.com/p/d951ac56136e
来源：简书
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。